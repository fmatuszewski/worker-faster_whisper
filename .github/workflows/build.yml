name: Build Whisper images

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

env:                       # shared across jobs
  IMAGE_REPO: ${{ secrets.DOCKERHUB_USER }}/worker-faster_whisper
  CACHE_TAG: ${{ secrets.DOCKERHUB_USER }}/worker-faster_whisper:cache

jobs:
# ─────────────────────────────────────────────────────────────
# 1. CORE images – build only if tag missing
# ─────────────────────────────────────────────────────────────
  core:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - tag: tiny-core
            models: tiny
            default: tiny
            storage:  10737418240     # 10 GB
          - tag: small-core
            models: tiny,small
            default: small
            storage: 16106127360     # 15 GB
          - tag: medium-core
            models: tiny,medium
            default: medium
            storage: 21474836480     # 20 GB

    steps:
      - uses: actions/checkout@v4

      # BuildKit capable of cache-export
      - uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          buildkitd-flags: --oci-worker-gc-keepstorage=${{ matrix.storage }}

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Check image existence
        id: check
        run: |
          if docker manifest inspect "$IMAGE_REPO:${{ matrix.tag }}" >/dev/null 2>&1 ; then
            echo "exists=true" >>"$GITHUB_OUTPUT"
          else
            echo "exists=false" >>"$GITHUB_OUTPUT"
          fi
      - name: Debug - show matrix value
        run: |
          echo "::notice title=Matrix models::'${{ matrix.tag }} - ${{ matrix.models }}'"

      - name: Build & Push CORE
        if: steps.check.outputs.exists == 'false'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.core
          push: true
          tags: ${{ env.IMAGE_REPO }}:${{ matrix.tag }}
          build-args: |
            WHISPER_MODELS=${{ matrix.models }}
            DEFAULT_MODEL=${{ matrix.default }}
            DOCKERHUB_USER=${{ secrets.DOCKERHUB_USER }}
            GIT_SHA=${{ github.sha }}
            GIT_BRANCH=${{ github.ref_name }}
          cache-from: type=registry,ref=${{ env.CACHE_TAG }}
          cache-to:   type=registry,ref=${{ env.CACHE_TAG }},mode=max

# ─────────────────────────────────────────────────────────────
# 2. CHILD images – always build, depend on CORE
# ─────────────────────────────────────────────────────────────
  child:
    runs-on: ubuntu-latest
    needs: core
    strategy:
      matrix:
        include:
          - tag: tiny
            base: tiny-core
          - tag: small
            base: small-core
          - tag: medium
            base: medium-core

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push CHILD
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.child
          push: true
          tags: ${{ env.IMAGE_REPO }}:${{ matrix.tag }}
          build-args: |
            DOCKERHUB_USER=${{ secrets.DOCKERHUB_USER }}
            BASE_TAG=${{ matrix.base }}
            CHILD_TAG=${{ matrix.tag }} 
            GIT_SHA=${{ github.sha }}
            GIT_BRANCH=${{ github.ref_name }}
          cache-from: type=registry,ref=${{ env.CACHE_TAG }}
          cache-to:   type=registry,ref=${{ env.CACHE_TAG }},mode=max

  full:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - tag: all
            models: tiny,base,small,medium,large-v1,large-v2,large-v3,turbo
            default: large-v3
            storage:  10737418240     # 10 GB
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push FULL
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.all
          push: true
          tags: ${{ env.IMAGE_REPO }}:${{ matrix.tag }}
          build-args: |
            WHISPER_MODELS=${{ matrix.models }}
            DEFAULT_MODEL=${{ matrix.default }}
            DOCKERHUB_USER=${{ secrets.DOCKERHUB_USER }}
            GIT_SHA=${{ github.sha }}
            GIT_BRANCH=${{ github.ref_name }}
